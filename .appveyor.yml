environment:
  global:
    PYPKG: derivcheck
    GITHUB_REPO_NAME: tovrstra/derivcheck

  matrix:
    - PYTHON_VERSION: 2.7
      CONDA: C:\Miniconda

    - PYTHON_VERSION: 3.5
      CONDA: C:\Miniconda35

    - PYTHON_VERSION: 3.6
      CONDA: C:\Miniconda36

version: '{build}'
image: Visual Studio 2015

# For testing only...
#skip_non_tags: true

platform:
- x86
- x64

branches:
  only:
    - master

init:
  - ps: if ($Env:PLATFORM -eq "x64") { $Env:CONDA = "${Env:CONDA}-x64" }
  - ps: Write-Host $Env:PYTHON_VERSION
  - ps: Write-Host $Env:CONDA
  - ps: Write-Host $Env:GITHUB_REPO_NAME
  - ps: Write-Host $Env:PLATFORM
  - ps: Write-Host $Env:APPVEYOR_REPO_TAG
  - ps: Write-Host $Env:APPVEYOR_REPO_TAG_NAME
  - ps: Write-Host $Env:APPVEYOR_REPO_NAME

install:
  # Load the conda root environment, configure and install some packages
  - '"%CONDA%\Scripts\activate.bat"'
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # A few things must be installed for the build and deployment steps. Also dependencies
  # for setup.py must be pre-installed.
  - conda install python=%PYTHON_VERSION% conda-build anaconda-client numpy
  # Install codecov tool for uploading coverage reports
  - pip install codecov coverage
  # Show conda info for debugging
  - conda info -a

build: false

test_script:
  # Build the package
  - git fetch origin --tags
  - conda build tools/conda.recipe"

  # Install the package
  - conda install --use-local %PYPKG%

  # Run the tests outside the source tree.
  - pushd %HOMEPATH% && (nosetests %PYPKG% -v --processes= --detailed-errors --with-coverage --cover-package=%PYPKG% --cover-tests --cover-erase --cover-inclusive --cover-branches --cover-xml & popd)


after_test:
  # Upload coverage reports
  - 'codecov -f "%HOMEPATH%\coverage.xml"'
